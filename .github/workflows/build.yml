name: FreeChampionRotationsV2

on:
  push:
    branches: [ "main" ]

jobs:

  laravel-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: '8.1'
      - uses: actions/checkout@v3
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      - name: Execute tests via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit

  laravel-deploy:
    needs:  laravel-tests
    runs-on: self-hosted
    container:
      image: kirschbaumdevelopment/laravel-test-runner:8.1
    steps:
      - uses: actions/checkout@v3
      - name: copy production env
        run: php -r "file_exists('.env') || copy('.env.production', '.env');"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader --no-dev
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: set secret variables
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          RGAPI:  ${{ secrets.RGAPI }}
        run: echo $RGAPI >> .env && echo $DB_PASSWORD >> .env
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
            path: ~/.npm
            key: npm-${{ hashFiles('package-lock.json') }}
            restore-keys: npm-
      - name: Install dependencies
        run: npm ci && npm run build
      - name: clear cache then cache config and views
        run: php artisan optimize:clear && php artisan view:cache
